// SPDX-License-Identifier: MIT
pragma solidity ^0.8.25;

import "forge-std/Test.sol";
import {Auction} from "../../../src/exploits/auction/Auction.sol";

contract AuctionChallenge is Test {
    Auction public auction;
    address public deployer;
    address public challenger;

    function setUp() public {
        vm.deal(deployer, 100 ether);
        auction = new Auction();
        auction.makeBid{value: 10 ether}();
    }

    function preCheck() public view {
        assertEq(auction.getHighestBidAmount(), 10 ether);
        assertEq(auction.getHighestBidAddress(), deployer);
    }

    function testAttack() public {
        vm.startPrank(challenger);

        /**
         * Execute the attack here
         */

        // DO NOT REMOVE
        assertEq(auction.getHighestBidAddress(), challenger);
        vm.stopPrank();

        vm.startPrank(deployer);
        vm.expectRevert();
        auction.makeBid{value: 10 ether}();
    }
}
